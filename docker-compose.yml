version: '3.8'

services:
  nest-backend:
    container_name: nest-app
    image: nest-api
    restart: always
    build:
      dockerfile: Dockerfile
      context: .
    ports:
      - 4000:4000
    # environment:
    #   - DB_TYPE=postgres
    #   - PG_HOST=postgres
    #   - PG_USER=postgres
    #   - PG_PASSWORD=postgres
    #   - PG_DB=postgres
    #   - PG_PORT=5432
    networks:
      - backend_network
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
      - /var/run/docker.sock:/var/run/docker.sock
    # depends_on:
    #   - postgres
    #   - redis
    depends_on:
      postgres:
        condition: service_healthy
        restart: true
      redis:
        condition: service_healthy

  redis:
    container_name: redis-db
    image: redis
    environment:
      - REDIS_PORT=6379
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 30
    ports:
      - 6379:6379
    networks:
      - backend_network
    volumes:
      - redis:/data

  postgres:
    container_name: postgres-db
    image: postgres:12
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s  
    networks:
      - backend_network
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./src/dbDumpFile:/dbDumpFile
      - /var/run/docker.sock:/var/run/docker.sock

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@pgadmin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    networks:
      - backend_network
    ports:
      - '5050:80'
    depends_on:
      - postgres

networks:
  backend_network:
    driver: bridge

volumes:
  postgres_data: {}
  redis:
    driver: local